{"version":3,"sources":["components/Header/Header.jsx","components/HomePage/HomePage.jsx","components/PersonName/PersonName.jsx","components/PersonRow/PersonRow.jsx","components/NewPerson/NewPerson.jsx","components/People/People.jsx","getPeple.js","App.jsx","index.jsx"],"names":["Header","className","to","exact","activeClassName","HomePage","PersonName","name","sex","slug","url","useRouteMatch","search","useLocation","pathname","style","color","defaultProps","PersonRow","born","died","fatherName","motherName","father","mother","includes","NewPerson","React","memo","people","setPeople","setVisibleForm","useState","errors","setErrors","inputs","setInputs","year","Date","getFullYear","regEx","male","filter","female","changeValue","e","target","value","clearErrors","error","addError","checkForValid","test","trim","onSubmit","preventDefault","newPerson","toLowerCase","split","join","find","person","motherr","type","placeholder","onChange","onBlur","disabled","map","key","Object","values","every","input","People","sort","setSort","history","useHistory","visibleForm","location","searchParams","URLSearchParams","aplayedQyery","get","query","setQuery","useEffect","fetch","then","res","json","peoples","timeOut","useCallback","debounce","text","set","delete","push","toString","filterPeople","useMemo","length","sortTable","sortBy","a","b","localeCompare","reverse","onClick","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"kPAGaA,G,YAAS,kBACpB,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CACEC,GAAG,IACHC,OAAK,EACLF,UAAU,qBACVG,gBAAgB,aAJlB,QAQA,kBAAC,IAAD,CACEF,GAAG,UACHD,UAAU,qBACVG,gBAAgB,aAHlB,eCbKC,EAAW,kBACtB,wBAAIJ,UAAU,SAAd,c,+BCCWK,EAAa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KAC9BC,EAAQC,cAARD,IACAE,EAAWC,cAAXD,OAER,OACE,kBAAC,IAAD,CACEV,GAAI,CACFY,SAAS,GAAD,OAAKJ,EAAL,YAAYD,GAAQG,UAE9BG,MAAO,CAAEC,MAAe,MAARR,EAAc,OAAS,QAEtCD,IAWPD,EAAWW,aAAe,CACxBV,KAAM,GACNE,KAAM,GACND,IAAK,ICxBA,IAAMU,EAAY,SAAC,GAUpB,IATFX,EASC,EATDA,KACAC,EAQC,EARDA,IACAW,EAOC,EAPDA,KACAC,EAMC,EANDA,KACAC,EAKC,EALDA,WACAC,EAIC,EAJDA,WACAb,EAGC,EAHDA,KACAc,EAEC,EAFDA,OACAC,EACC,EADDA,OAEMV,EAAaD,cAAbC,SAER,OACE,wBACEP,KAAME,EACNR,UAAS,UAAKa,EAASW,SAAShB,IAAS,gBAGzC,4BACE,kBAAC,EAAD,CACEF,KAAMA,EACNC,IAAKA,EACLC,KAAMA,KAGV,4BAAKD,GACL,4BAAKW,GACL,4BAAKC,GACL,4BACE,kBAAC,EAAD,CACEb,KAAMc,EACNb,IAAI,IACJC,KAAMc,EAASA,EAAOd,KAAO,MAGjC,4BACE,kBAAC,EAAD,CACEF,KAAMe,EACNd,IAAI,IACJC,KAAMe,EAASA,EAAOf,KAAO,QAuBvCS,EAAUD,aAAe,CACvBM,OAAQ,GACRC,OAAQ,I,oBCnEGE,EAAYC,IAAMC,MAAK,YAA4C,IAAzCC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,eACxD,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,CACnCzB,KAAM,GACNC,IAAK,GACLW,KAAM,EACNC,KAAM,EACNC,WAAY,GACZC,WAAY,KANd,mBAAOa,EAAP,KAAeC,EAAf,KASMC,GAAO,IAAIC,MAAOC,cAClBC,EAAQ,KACRC,EAAOZ,EAAOa,QAAO,gBAAElC,EAAF,EAAEA,IAAKW,EAAP,EAAOA,KAAMC,EAAb,EAAaA,KAAb,MACjB,MAARZ,IACI2B,EAAOhB,MAAQA,GAAQ,KAAOgB,EAAOhB,MAAQA,GAAQ,IACpDC,GAAQe,EAAOhB,QAEhBwB,EAASd,EAAOa,QAAO,gBAAElC,EAAF,EAAEA,IAAKW,EAAP,EAAOA,KAAMC,EAAb,EAAaA,KAAb,MACnB,MAARZ,IACI2B,EAAOhB,MAAQA,GAAQ,KAAOgB,EAAOhB,MAAQA,GAAQ,IACpDC,GAAQe,EAAOhB,QAGhByB,EAAc,SAACC,GACnB,MAAwBA,EAAEC,OAAlBvC,EAAR,EAAQA,KAAMwC,EAAd,EAAcA,MAEdX,EAAU,2BACLD,GADI,kBACK5B,EAAOwC,MAIjBC,EAAc,SAACzC,GACnB2B,EAAUD,EAAOS,QAAO,SAAAO,GAAK,OAAIA,IAAU1C,OAGvC2C,EAAW,SAAC3C,GAChB2B,EAAU,GAAD,mBAAKD,GAAL,CAAa1B,MAGlB4C,EAAgB,SAACN,GACrB,MAAwBA,EAAEC,OAAlBvC,EAAR,EAAQA,KAAMwC,EAAd,EAAcA,MAEd,OAAQxC,GACN,IAAK,OACH,OAAKiC,EAAMY,KAAKL,KAAWA,EAAMM,OAAO5B,SAAS,OAAUsB,OACzDG,EAAS3C,QAKXyC,EAAYzC,GAGd,IAAK,OACH,OAAKwC,EAAQ,OAASA,EAAQV,OAC5Ba,EAAS3C,QAKXyC,EAAYzC,GAGd,IAAK,OACH,IAAMwC,GAASZ,EAAOhB,KAAQ,KAAO4B,GAASZ,EAAOhB,KAGnD,YAFA+B,EAAS3C,GAKXyC,EAAYzC,KAwClB,OACE,yBAAKN,UAAU,QACb,0BACEA,UAAU,OACVqD,SAlCe,SAACT,GACpBA,EAAEU,iBAEF,IAAMC,EAAY,CAChBjD,KAAM4B,EAAO5B,KACbC,IAAK2B,EAAO3B,IACZW,KAAMgB,EAAOhB,KACbC,KAAMe,EAAOf,KACbC,WAAYc,EAAOd,WACnBC,WAAYa,EAAOb,WACnBb,KAAK,GAAD,OAAK0B,EAAO5B,KAAKkD,cAClBJ,OAAOK,MAAM,KACbC,KAAK,KAFJ,YAEYxB,EAAOhB,MACvBI,OAAQkB,EAAKmB,MAAK,SAAAC,GAAM,OAAIA,EAAOtD,OAAS4B,EAAOd,cACnDyC,QAASnB,EAAOiB,MAAK,SAAAC,GAAM,OAAIA,EAAOtD,OAAS4B,EAAOb,eAGxDQ,EAAU,GAAD,mBAAKD,GAAL,CAAa2B,KACtBzB,GAAe,GAEfK,EAAU,CACR7B,KAAM,GACNC,IAAK,GACLW,KAAM,EACNC,KAAM,EACNC,WAAY,GACZC,WAAY,OAUV,2BACErB,UAAU,mBACV8D,KAAK,OACLxD,KAAK,OACLyD,YAAY,qBACZjB,MAAOZ,EAAO5B,KACd0D,SAAUrB,EACVsB,OAAQf,IAETlB,EAAOR,SAAS,SACf,uBAAGxB,UAAU,kBAAb,+CAIF,yBACEA,UAAU,UACVM,KAAK,SAEL,2BAAON,UAAU,SACf,2BACE8D,KAAK,QACLxD,KAAK,MACLwC,MAAM,OACNkB,SAAUrB,IALd,QASA,2BAAO3C,UAAU,SACf,2BACE8D,KAAK,QACLxD,KAAK,MACLwC,MAAM,SACNkB,SAAUrB,IALd,WAUF,2BACE3C,UAAU,iBACV8D,KAAK,SACLxD,KAAK,OACLyD,YAAY,cACZjB,MAAOZ,EAAOhB,MAAQ,GACtB8C,SAAUrB,EACVsB,OAAQf,EACRgB,UAAWhC,EAAO5B,MAAQ0B,EAAOR,SAAS,UAE3CQ,EAAOR,SAAS,SACf,uBAAGxB,UAAU,kBAAb,4CAEG,IACAoC,GAGL,2BACEpC,UAAU,iBACV8D,KAAK,SACLxD,KAAK,OACLyD,YAAY,cACZjB,MAAOZ,EAAOf,MAAQ,GACtB6C,SAAUrB,EACVsB,OAAQf,EACRgB,UAAWhC,EAAOhB,MAAQc,EAAOR,SAAS,UAE3CQ,EAAOR,SAAS,SACf,uBAAGxB,UAAU,kBAAb,6FAMF,yBAAKA,UAAU,mBACb,4BACEM,KAAK,aACLwC,MAAOZ,EAAOd,WACd4C,SAAUrB,GAEV,4BAAQG,MAAM,IAAd,iBACCN,EAAK2B,KAAI,SAAAP,GAAM,OACd,4BACEd,MAAOc,EAAOtD,KACd8D,IAAKR,EAAOpD,MAEXoD,EAAOtD,WAKhB,yBAAKN,UAAU,mBACb,4BACEM,KAAK,aACLwC,MAAOZ,EAAOb,WACd2C,SAAUrB,GAEV,4BAAQG,MAAM,IAAd,iBACCJ,EAAOyB,KAAI,SAAAP,GAAM,OAChB,4BACEd,MAAOc,EAAOtD,KACd8D,IAAKR,EAAOpD,MAEXoD,EAAOtD,WAKhB,4BACEwD,KAAK,SACL9D,UAAU,iBACVkE,UAAWG,OAAOC,OAAOpC,GAAQqC,OAAM,SAAAC,GAAK,OAAIA,MAHlD,YC1NKC,EAAS,WACpB,MAA4B1C,mBAAS,IAArC,mBAAOH,EAAP,KAAeC,EAAf,KACA,EAAwBE,mBAAS,IAAjC,mBAAO2C,EAAP,KAAaC,EAAb,KACMC,EAAUC,cAChB,EAAsC9C,oBAAS,GAA/C,mBAAO+C,EAAP,KAAoBhD,EAApB,KAEMiD,EAAWnE,cACXoE,EAAe,IAAIC,gBAAgBF,EAASpE,QAE5CuE,EAAeF,EAAaG,IAAI,UAAY,GAClD,EAA0BpD,mBAASmD,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WClBVC,MAAM,qEACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAO,OAAIA,EAAQxB,KAAI,SAAAvC,GAAM,kCAE5BA,GAF4B,IAG/BL,OAAQoE,EAAQhC,MAAK,SAAAC,GAAM,OACzBhC,EAAOP,aAAeuC,EAAOtD,KAAOsD,EAAOtD,KAAO,MAEpDgB,OAAQqE,EAAQhC,MAAK,SAAAC,GAAM,OACzBhC,EAAOR,aAAewC,EAAOtD,KAAOsD,EAAOtD,KAAO,cDWrDkF,KAAK3D,KACP,IAEH,IAAM+D,EAAUC,sBACdC,KAAS,SAACC,GACJA,EACFf,EAAagB,IAAI,QAASD,GAE1Bf,EAAaiB,OAAO,SAGtBrB,EAAQsB,KAAK,CAAEvF,OAAQqE,EAAamB,eACnC,KAAM,IAGLC,EAAeC,mBAAQ,kBAAOnB,EAAa9B,OAAOkD,OACpD1E,EAAOa,QAAO,qBAAGnC,KAAH,EAASc,WAAT,EAAqBC,YACFmC,cAAchC,SAC7C0D,EAAa1B,kBAGf5B,IAAS,CAACsD,EAActD,IAEtB2E,EAAY,SAACC,GACjBxB,EAAagB,IAAI,SAAUQ,GAC3BxB,EAAaiB,OAAO,aAEhBO,IAAW9B,GACbM,EAAagB,IAAI,YAAa,OAC9BI,EAAa1B,MAAK,SAAC+B,EAAGC,GAAJ,MAChB,CAAC,MAAO,QAAQlF,SAASgF,GAAUC,EAAED,GAAQG,cAC3CD,EAAEF,KACCC,EAAED,IAAWE,EAAEF,MACtB7B,EAAQ6B,KAERxB,EAAagB,IAAI,YAAa,QAC9BI,EAAaQ,UACbjC,EAAQ,KAGVC,EAAQsB,KAAK,CAAEvF,OAAQqE,EAAamB,cAQtC,OACE,oCACE,wBAAInG,UAAU,SAAd,eACA,yBAAKA,UAAU,eACb,2BACE8C,MAAOsC,EACPpB,SAAU,SAAApB,GAAC,OAXGE,EAWcF,EAAEC,OAAOC,MAV3C8C,EAAQ9C,QACRuC,EAASvC,GAFU,IAACA,GAYd9C,UAAU,QACV8D,KAAK,OACLC,YAAY,aAGfe,GACC,kBAACrD,EAAD,CACEG,OAAQA,EACRC,UAAWA,EACXC,eAAgBA,KAGlBgD,GACF,4BACEhB,KAAK,SACL9D,UAAU,+BACV6G,QAAS,kBAAM/E,GAAe,KAHhC,cASA,2BAAO9B,UAAU,SACdoG,EAAaE,OAAS,GACrB,+BACE,4BACE,wBACEO,QAAS,kBAAMN,EAAU,UAD3B,QAKA,wBACEM,QAAS,kBAAMN,EAAU,SAD3B,OAKA,wBACEM,QAAS,kBAAMN,EAAU,UAD3B,QAKA,wBACEM,QAAS,kBAAMN,EAAU,UAD3B,QAKA,sCACA,wCAIN,+BACGH,EAAajC,KAAI,SAAAP,GAAM,OACtB,kBAAC,EAAcA,UExGZkD,EAfH,kBACV,yBAAK9G,UAAU,OAGb,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+G,KAAK,UAAUC,UAAWvC,IACjC,kBAAC,IAAD,CAAOsC,KAAK,IAAI7G,OAAK,EAAC8G,UAAW5G,IACjC,kBAAC,IAAD,CAAU2G,KAAK,QAAQ9G,GAAG,MAC1B,wBAAID,UAAU,YAAd,qBCdNiH,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.faa5b18e.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header = () => (\n  <header className=\"header\">\n    <nav className=\"navbar\">\n      <div className=\"navbar-menu\">\n        <NavLink\n          to=\"/\"\n          exact\n          className=\"navbar-item is-tab\"\n          activeClassName=\"is-active\"\n        >\n          Home\n        </NavLink>\n        <NavLink\n          to=\"/people\"\n          className=\"navbar-item is-tab\"\n          activeClassName=\"is-active\"\n        >\n          People\n        </NavLink>\n      </div>\n    </nav>\n  </header>\n);\n","import React from 'react';\n\nexport const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation, useRouteMatch } from 'react-router-dom';\n\nexport const PersonName = ({ name, sex, slug }) => {\n  const { url } = useRouteMatch();\n  const { search } = useLocation();\n\n  return (\n    <Link\n      to={{\n        pathname: `${url}/${slug}`, search,\n      }}\n      style={{ color: sex === 'm' ? 'blue' : 'red' }}\n    >\n      {name}\n    </Link>\n  );\n};\n\nPersonName.propTypes = {\n  name: PropTypes.string,\n  slug: PropTypes.string,\n  sex: PropTypes.string,\n};\n\nPersonName.defaultProps = {\n  name: '',\n  slug: '',\n  sex: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router';\nimport { PersonName } from '../PersonName';\n\nexport const PersonRow = (\n  { name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    father,\n    mother },\n) => {\n  const { pathname } = useLocation();\n\n  return (\n    <tr\n      name={slug}\n      className={`${pathname.includes(slug) && 'is-selected'}`}\n    >\n\n      <td>\n        <PersonName\n          name={name}\n          sex={sex}\n          slug={slug}\n        />\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        <PersonName\n          name={fatherName}\n          sex=\"m\"\n          slug={father ? father.slug : ''}\n        />\n      </td>\n      <td>\n        <PersonName\n          name={motherName}\n          sex=\"f\"\n          slug={mother ? mother.slug : ''}\n        />\n      </td>\n    </tr>\n  );\n};\n\nPersonRow.propTypes = {\n  name: PropTypes.string.isRequired,\n  sex: PropTypes.string.isRequired,\n  born: PropTypes.number.isRequired,\n  died: PropTypes.number.isRequired,\n  fatherName: PropTypes.string.isRequired,\n  motherName: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  father: PropTypes.shape({\n    slug: PropTypes.string,\n  }),\n  mother: PropTypes.shape({\n    slug: PropTypes.string,\n  }),\n};\n\nPersonRow.defaultProps = {\n  father: '',\n  mother: '',\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const NewPerson = React.memo(({ people, setPeople, setVisibleForm }) => {\n  const [errors, setErrors] = useState([]);\n  const [inputs, setInputs] = useState({\n    name: '',\n    sex: '',\n    born: 0,\n    died: 0,\n    fatherName: '',\n    motherName: '',\n  });\n\n  const year = new Date().getFullYear();\n  const regEx = /\\D/;\n  const male = people.filter(({sex, born, died}) => (\n    sex === 'm' && (\n      (+inputs.born - +born <= 40 && +inputs.born - +born >= 18) \n      && died >= inputs.born )\n    ));\n  const female = people.filter(({sex, born, died}) => (\n    sex === 'f' && (\n      (+inputs.born - +born <= 40 && +inputs.born - +born >= 18)\n      && died >= inputs.born)\n    ));\n\n  const changeValue = (e) => {\n    const { name, value } = e.target;\n\n    setInputs({\n      ...inputs, [name]: value,\n    });\n  };\n\n  const clearErrors = (name) => {\n    setErrors(errors.filter(error => error !== name));\n  };\n\n  const addError = (name) => {\n    setErrors([...errors, name]);\n  };\n\n  const checkForValid = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        if ((regEx.test(value) && !value.trim().includes(' ')) || !value) {\n          addError(name);\n\n          return;\n        }\n\n        clearErrors(name);\n\n        return;\n      case 'born':\n        if (+value < 1400 || +value > year) {\n          addError(name);\n\n          return;\n        }\n\n        clearErrors(name);\n\n        return;\n      case 'died':\n        if ((+value - +inputs.born) > 150 || value < +inputs.born) {\n          addError(name);\n\n          return;\n        }\n\n        clearErrors(name);\n\n        break;\n\n      default:\n\n        break;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newPerson = {\n      name: inputs.name,\n      sex: inputs.sex,\n      born: inputs.born,\n      died: inputs.died,\n      fatherName: inputs.fatherName,\n      motherName: inputs.motherName,\n      slug: `${inputs.name.toLowerCase()\n        .trim().split(' ')\n        .join('-')}-${inputs.born}`,\n      father: male.find(person => person.name === inputs.fatherName),\n      motherr: female.find(person => person.name === inputs.motherName),\n    };\n\n    setPeople([...people, newPerson]);\n    setVisibleForm(false);\n\n    setInputs({\n      name: '',\n      sex: '',\n      born: 0,\n      died: 0,\n      fatherName: '',\n      motherName: '',\n    });\n  };\n\n  return (\n    <div className=\"card\">\n      <form\n        className=\"form\"\n        onSubmit={handleSubmit}\n      >\n        <input\n          className=\"input is-primary\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter full name...\"\n          value={inputs.name}\n          onChange={changeValue}\n          onBlur={checkForValid}\n        />\n        {errors.includes('name') && (\n          <p className=\"help is-danger\">\n            Name should contain only letters and spaces\n          </p>\n        )}\n        <div\n          className=\"control\"\n          name=\"radio\"\n        >\n          <label className=\"radio\">\n            <input\n              type=\"radio\"\n              name=\"sex\"\n              value=\"male\"\n              onChange={changeValue}\n            />\n            Male\n          </label>\n          <label className=\"radio\">\n            <input\n              type=\"radio\"\n              name=\"sex\"\n              value=\"female\"\n              onChange={changeValue}\n            />\n            Female\n          </label>\n        </div>\n        <input\n          className=\"input is-small\"\n          type=\"number\"\n          name=\"born\"\n          placeholder=\"Person born\"\n          value={inputs.born || ''}\n          onChange={changeValue}\n          onBlur={checkForValid}\n          disabled={!inputs.name || errors.includes('name')}\n        />\n        {errors.includes('born') && (\n          <p className=\"help is-danger\">\n            Born year must be more then 1400 and less\n            {' '}\n            {year}\n          </p>\n        )}\n        <input\n          className=\"input is-small\"\n          type=\"number\"\n          name=\"died\"\n          placeholder=\"Person died\"\n          value={inputs.died || ''}\n          onChange={changeValue}\n          onBlur={checkForValid}\n          disabled={!inputs.born || errors.includes('born')}\n        />\n        {errors.includes('died') && (\n          <p className=\"help is-danger\">\n            Death year must be greater than\n            the date of birth and\n            the age must be less than 150 years\n          </p>\n        )}\n        <div className=\"select is-small\">\n          <select\n            name=\"fatherName\"\n            value={inputs.fatherName}\n            onChange={changeValue}\n          >\n            <option value=\"\">Select Father</option>\n            {male.map(person => (\n              <option\n                value={person.name}\n                key={person.slug}\n              >\n                {person.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"select is-small\">\n          <select\n            name=\"motherName\"\n            value={inputs.motherName}\n            onChange={changeValue}\n          >\n            <option value=\"\">Select Mother</option>\n            {female.map(person => (\n              <option\n                value={person.name}\n                key={person.slug}\n              >\n                {person.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"button is-link\"\n          disabled={!Object.values(inputs).every(input => input)}\n          // onClick={handleSubmit}\n        >\n          Add\n        </button>\n      </form>\n    </div>\n  );\n});\n\nNewPerson.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  setPeople: PropTypes.func.isRequired,\n  setVisibleForm: PropTypes.func.isRequired,\n};\n","import React, { useCallback, useEffect, useState, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport { getPeople } from '../../getPeple';\nimport { PersonRow } from '../PersonRow';\nimport { NewPerson } from '../NewPerson';\n\nexport const People = () => {\n  const [people, setPeople] = useState([]);\n  const [sort, setSort] = useState('');\n  const history = useHistory();\n  const [visibleForm, setVisibleForm] = useState(false);\n\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const aplayedQyery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(aplayedQyery);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople);\n  }, []);\n\n  const timeOut = useCallback(\n    debounce((text) => {\n      if (text) {\n        searchParams.set('query', text);\n      } else {\n        searchParams.delete('query');\n      }\n\n      history.push({ search: searchParams.toString() });\n    }, 500), [],\n  );\n\n  const filterPeople = useMemo(() => (aplayedQyery.trim().length\n    ? people.filter(({ name, fatherName, motherName }) => (\n      (name + fatherName + motherName).toLowerCase().includes(\n        aplayedQyery.toLowerCase(),\n      )\n    ))\n    : people), [aplayedQyery, people]);\n\n  const sortTable = (sortBy) => {\n    searchParams.set('sortBy', sortBy);\n    searchParams.delete('sortOrder');\n\n    if (sortBy !== sort) {\n      searchParams.set('sortOrder', 'asc');\n      filterPeople.sort((a, b) => (\n        ['sex', 'name'].includes(sortBy) ? a[sortBy].localeCompare(\n          b[sortBy],\n        ) : +a[sortBy] - +b[sortBy]));\n      setSort(sortBy);\n    } else {\n      searchParams.set('sortOrder', 'desc');\n      filterPeople.reverse();\n      setSort('');\n    }\n\n    history.push({ search: searchParams.toString() });\n  };\n\n  const handleChange = (value) => {\n    timeOut(value);\n    setQuery(value);\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"input-block\">\n        <input\n          value={query}\n          onChange={e => handleChange(e.target.value)}\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Find...\"\n        />\n      </div>\n      {visibleForm && (\n        <NewPerson\n          people={people}\n          setPeople={setPeople}\n          setVisibleForm={setVisibleForm}\n        />\n      )}\n      {!visibleForm && (\n      <button\n        type=\"button\"\n        className=\"button is-success is-rounded\"\n        onClick={() => setVisibleForm(true)}\n      >\n        Add person\n      </button>\n      )}\n\n      <table className=\"table\">\n        {filterPeople.length > 0 && (\n          <thead>\n            <tr>\n              <th\n                onClick={() => sortTable('name')}\n              >\n                Name\n              </th>\n              <th\n                onClick={() => sortTable('sex')}\n              >\n                Sex\n              </th>\n              <th\n                onClick={() => sortTable('born')}\n              >\n                Born\n              </th>\n              <th\n                onClick={() => sortTable('died')}\n              >\n                Died\n              </th>\n              <th>Father</th>\n              <th>Mother</th>\n            </tr>\n          </thead>\n        )}\n        <tbody>\n          {filterPeople.map(person => (\n            <PersonRow {...person} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","export const getPeople = () => (\n  fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n    .then(res => res.json())\n    .then(peoples => peoples.map(people => (\n      {\n        ...people,\n        mother: peoples.find(person => (\n          people.motherName === person.name ? person.name : ''\n        )),\n        father: peoples.find(person => (\n          people.fatherName === person.name ? person.name : ''\n        )),\n      }\n    )))\n);\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport './App.scss';\nimport 'bulma';\n\nimport { Header } from './components/Header';\nimport { HomePage } from './components/HomePage';\nimport { People } from './components/People';\n\nconst App = () => (\n  <div className=\"App\">\n    {/* <h1 className=\"title\">People table</h1> */}\n\n    <Header />\n\n    <Switch>\n      <Route path=\"/people\" component={People} />\n      <Route path=\"/\" exact component={HomePage} />\n      <Redirect path=\"/home\" to=\"/\" />\n      <h2 className=\"subtitle\">Not Found Page</h2>\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}